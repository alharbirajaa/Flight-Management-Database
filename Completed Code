Use flight_management;
CREATE TABLE airline(
airline_id INT PRIMARY KEY ,
airline_name VARCHAR(100) NOT NULL,
number_of_flights INT,
contact VARCHAR(255) UNIQUE
);

CREATE TABLE pilot(
Pilot_id INT PRIMARY KEY,
first_name CHAR(50) NOT NULL,
last_name CHAR(50) NOT NULL,
pilot_license CHAR(255) UNIQUE NOT NULL
);

CREATE TABLE plane(
plane_id INT PRIMARY KEY,
number_of_seats INT NOT NULL,
pilot_id INT,
airline_id INT,
FOREIGN KEY (pilot_id) REFERENCES pilot(pilot_id),
FOREIGN KEY (airline_id) REFERENCES airline(airline_id)
);

CREATE TABLE flight(
flight_id INT PRIMARY KEY,
passenger_lounge VARCHAR(60) DEFAULT 'Un defined',
landing_time TIME DEFAULT'00:00:00',
arrived_time TIME DEFAULT'00:00:00',
from_airport VARCHAR(60) NOT NULL,
to_airport VARCHAR(60)NOT NULL,
flight_date DATE NOT NULL,
price DECIMAL(10,2) NOT NULL,
plane_id INT,
pilot_id INT,
FOREIGN KEY (plane_id) REFERENCES plane(plane_id),
FOREIGN KEY (pilot_id) REFERENCES pilot(pilot_id)
);

CREATE TABLE passenger(
passenger_id INT PRIMARY KEY,
lastName CHAR(50)NOT NULL,
firstName CHAR(50)NOT NULL,
date_of_birth DATE NOT NULL,
phone_number INT UNIQUE NOT NULL,
city CHAR(50),
email CHAR(100)
);

CREATE TABLE payment(
payment_id INT PRIMARY KEY,
payment_method CHAR(100) NOT NULL,
payment_date DATE NOT NULL,
passenger_id INT,
FOREIGN KEY (passenger_id) REFERENCES passenger(passenger_id)
);

CREATE TABLE seat (
 seat_number VARCHAR(30),
 class VARCHAR(30),
 PRIMARY KEY (seat_number)
);

CREATE TABLE boarding(
boardingpass_id INT PRIMARY KEY,
gate INT,
passenger_id INT,
flight_id INT,
payment_id INT,
checked_in VARCHAR(20),
has_boarded VARCHAR(20),
seat_number VARCHAR(30) ,
FOREIGN KEY (seat_number) REFERENCES seat(seat_number),
FOREIGN KEY (passenger_id) REFERENCES passenger(passenger_id),
FOREIGN KEY (flight_id) REFERENCES flight(flight_id),
FOREIGN KEY (payment_id) REFERENCES payment(payment_id)
);

CREATE TABLE changed_flights(
flight_id INT,
landing_time TIME DEFAULT'00:00:00',
arrived_time TIME DEFAULT'00:00:00',
flight_date DATE NOT NULL,
passenger_lounge VARCHAR(60) DEFAULT 'Un defined'
);

CREATE TRIGGER before_update_flights
BEFORE UPDATE
ON flight
FOR EACH ROW
INSERT INTO changed_flights(flight_id,landing_time, arrived_time,flight_date,passenger_lounge)
VALUES(OLD.flight_id,OLD.landing_time, OLD.arrived_time, OLD.flight_date, OLD.passenger_lounge);
create table boarding_safe(
boardingpass_id INT,
message VARCHAR(90)
);
DELIMITER $$
CREATE TRIGGER completed_flights
after insert
ON boarding
FOR EACH ROW
begin
if (NEW.checked_in='Checked' AND NEW.has_boarded='Boarded')
THEN
INSERT INTO boarding_safe(boardingpass_id,message)
values(NEW.boardingpass_id,'traveled');
end if;
end $$
